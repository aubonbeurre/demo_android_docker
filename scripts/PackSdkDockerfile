FROM openjdk:8

ARG user=ae-eng
ARG group=ae-eng
ARG uid=1000
ARG gid=1000

ENV HOME /home/ae-eng

ENV SDK_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip" \
    ANDROID_HOME="${HOME}/Android/Sdk" \
    ANDROID_VERSION=26 \
    ANDROID_BUILD_TOOLS_VERSION=27.0.3 \
    ANDROID_NDK_ZIP=android-ndk-r18b-linux-x86_64.zip \
    ANDROID_NDK=android-ndk-r18b

RUN groupadd -g ${gid} ${group} \
    && useradd -d "$HOME" -u ${uid} -g ${gid} -m -s /bin/bash ${user}

RUN apt-get update \
    && yes | apt-get install --no-install-recommends --no-install-suggests g++ clang distcc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists

USER ${user}
WORKDIR ${HOME}

VOLUME /home/ae-eng/sources

RUN curl https://downloads.gradle.org/distributions/gradle-4.4.1-bin.zip -o gradle-4.4.1-bin.zip \
    && unzip gradle-4.4.1-bin.zip \
    && mkdir -p ~/Downloads/android-studio/gradle/gradle-4.1/bin/ \
    && ln -s ~/gradle-4.4.1/bin/gradle ~/Downloads/android-studio/gradle/gradle-4.1/bin/

# Download Android SDK
RUN mkdir .android \
    && mkdir -p "$ANDROID_HOME" \
    && cd "$ANDROID_HOME" \
    && curl -o sdk.zip $SDK_URL \
    && unzip sdk.zip \
    && rm sdk.zip \
    && yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses

# Install Android Build Tool and Libraries
RUN $ANDROID_HOME/tools/bin/sdkmanager --update
RUN $ANDROID_HOME/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS_VERSION}" \
    "platforms;android-${ANDROID_VERSION}" \
    "platform-tools" \
    "cmake;3.6.4111459" \
    "extras;android;m2repository" \
    "extras;google;m2repository"

RUN curl https://dl.google.com/android/repository/$ANDROID_NDK_ZIP -o $ANDROID_NDK_ZIP \
    && unzip $ANDROID_NDK_ZIP \
    && mkdir -p ~/Android/Sdk \
    && ln -s ~/$ANDROID_NDK ~/Android/Sdk/ndk-bundle 

RUN cp "/home/ae-eng/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++" "/home/ae-eng/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++.dis"
RUN cp "/home/ae-eng/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/clang" "/home/ae-eng/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/clang.dis"
RUN echo /home/ae-eng/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++.dis > /home/ae-eng/DISTCC_CMDLIST
RUN echo /home/ae-eng/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/clang.dis >> /home/ae-eng/DISTCC_CMDLIST

# Build a shell script because the ENTRYPOINT command doesn't like using ENV
RUN echo "#!/bin/bash \n export DISTCC_CMDLIST=/home/ae-eng/DISTCC_CMDLIST \n distccd --no-detach --daemon --allow 192.168.0.0/16 --log-stderr -p 3633" > /home/ae-eng/entrypoint.sh
RUN chmod +x /home/ae-eng/entrypoint.sh

ENTRYPOINT ["/home/ae-eng/entrypoint.sh"]

EXPOSE 3633
